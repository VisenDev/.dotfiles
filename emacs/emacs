(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes nil)
 '(package-selected-packages '(geiser-racket geiser sly evil zig-mode)))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


;; Replace "sbcl" with the path to your implementation
(setq inferior-lisp-program "sbcl")

(load-theme 'wheatgrass)


(require 'evil)
(evil-mode 1)                                                                                                                                          

;(define-key evil-normal-state-map "\C-n" 'evil-paste-pop-next)
;(define-key evil-normal-state-map "\C-p" 'evil-paste-pop)

(xterm-mouse-mode)
(setq backup-directory-alist `(("." . "~/.emacs-backups")))  ;; Store backups in a specific folder


;;
(when (window-system)
  (tool-bar-mode -1)    ;; hide toolbar
  (scroll-bar-mode -1))  ;; hide scrollbar
;;      (set-frame-size (selected-frame) 100 60)) ;; in px
(global-visual-line-mode t)  ;; wrap text to words at the end of the window (def chars)
;;(global-hl-line-mode t)      ;; highlight current line
(global-font-lock-mode t)    ;; syntax highlight wherever
(blink-cursor-mode 0)        ;; disabled. put (blink-cursor-blinks NN) for NN blinks. 
;; def 10, 0 or negative = forever
(column-number-mode)         ;; view column number in modeline
(setq-default line-spacing 3) ;; increase line height
(show-paren-mode 1)             ;; highlight matching parentheses
(save-place-mode)               ;; remember point position when saving file
(setq-default tab-width 2)
(setq-default indent-tabs-mode nil) ;; convert tabs to spaces

;Keybindings
(global-unset-key "\C-l")
(global-unset-key "\C-h")
(global-set-key "\C-l" (kbd "C-x <left>"))
(global-set-key "\C-h" (kbd "C-x <right>"))

;(global-unset-key (kbd "SPC"))
(global-unset-key (kbd "C-SPC"))
(global-set-key (kbd "C-SPC") (kbd "C-x 1"))

(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
;; and `package-pinned-packages`. Most users will not need or want to do this.
;;(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)
